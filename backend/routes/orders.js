const express = require('express');const router = express.Router();const mockOrders = [  {    id: 1,    userId: '68a73bb3079720f7d7998346',    products: [      { productId: 1, name: 'Máy ảnh Canon EOS R5', price: 25000000, quantity: 1 }    ],    total: 25000000,    status: 'pending',    orderDate: new Date('2025-08-21'),    shippingAddress: '123 HCM, Việt Nam'  },  {    id: 2,    userId: '68a73bb3079720f7d7998346',    products: [      { productId: 2, name: 'Ống kính Canon RF 24-70mm', price: 15000000, quantity: 1 }    ],    total: 15000000,    status: 'completed',    orderDate: new Date('2025-08-20'),    shippingAddress: '123 HCM, Việt Nam'  }];router.get('/', async (req, res) => {  try {    const { userId } = req.query;    if (!userId) {      return res.status(400).json({ message: 'Thiếu userId' });    }    const userOrders = mockOrders.filter(order => order.userId === userId);    res.json(userOrders);  } catch (error) {    res.status(500).json({ message: error.message });  }});router.get('/:id', async (req, res) => {  try {    const order = mockOrders.find(o => o.id === parseInt(req.params.id));    if (!order) {      return res.status(404).json({ message: 'Không tìm thấy đơn hàng' });    }    res.json(order);  } catch (error) {    res.status(500).json({ message: error.message });  }});router.post('/', async (req, res) => {  try {    const { userId, products, shippingAddress } = req.body;    if (!userId || !products || !shippingAddress) {      return res.status(400).json({ message: 'Thiếu thông tin đơn hàng' });    }    const newOrder = {      id: mockOrders.length + 1,      userId,      products,      total: products.reduce((sum, p) => sum + (p.price * p.quantity), 0),      status: 'pending',      orderDate: new Date(),      shippingAddress    };    mockOrders.push(newOrder);    res.status(201).json(newOrder);  } catch (error) {    res.status(500).json({ message: error.message });  }});router.put('/:id/status', async (req, res) => {  try {    const { status } = req.body;    const order = mockOrders.find(o => o.id === parseInt(req.params.id));    if (!order) {      return res.status(404).json({ message: 'Không tìm thấy đơn hàng' });    }    order.status = status;    res.json(order);  } catch (error) {    res.status(500).json({ message: error.message });  }});module.exports = router;