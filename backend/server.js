const express = require('express');const mongoose = require('mongoose');const cors = require('cors');require('dotenv').config({ path: './config.env' });const app = express();app.use(cors());app.use(express.json());app.use(express.urlencoded({ extended: true }));mongoose  .connect(process.env.MONGODB_URI || 'mongodb:  .then(() => {    console.log('Connected to MongoDB successfully!');  })  .catch(error => {    console.error('MongoDB connection error:', error);  });const productRoutes = require('./routes/sanpham');const productsRoutes = require('./routes/products');const taiKhoanRoutes = require('./routes/taikhoan');const dashboardRoutes = require('./routes/dashboard');app.get('/', (req, res) => {  res.json({ message: 'Welcome to your API server!' });});app.use('/api/products', productRoutes);        app.use('/api/admin/products', productsRoutes); app.use('/api/taikhoan', taiKhoanRoutes);      app.use('/api/dashboard', dashboardRoutes);    app.use('/api/orders', require('./routes/orders')); app.get('/api/health', (req, res) => {  res.json({     status: 'OK',     message: 'Server is running',    timestamp: new Date().toISOString(),    endpoints: {      sanpham: '/api/sanpham',      taikhoan: '/api/taikhoan',      orders: '/api/orders',      dashboard: '/api/dashboard'    }  });});const PORT = process.env.PORT || 5000;app.listen(PORT, () => {  console.log(`Server is running on port ${PORT}`);});